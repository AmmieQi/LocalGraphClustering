{
    "id": "realML.localgraphclustering.sweepCut.sweep_general",
    "name": "realML.localgraphclustering.sweepCut.sweep_general",
    "common_name": "sweep_general",
    "description": "Computes a cluster using sweep cut and conductance as a criterion. It initializes variables g.best_cluster, g.best_conductance, g.sweep_profile and g.volume_profile. This method is written in Python. Call help(SweepCut.__init__) to get the documentation for the variables of this class.",
    "languages": [
        "python2.7.13"
    ],
    "library": "RealML",
    "version": "0.2.2",
    "source_code": "https://github.com/kfoynt/LocalGraphClustering/blob/master/localgraphclustering/sweepCut.py",
    "is_class": "false",
    "parameters": [ 
        {
            "is_hyperparameter": false,
            "type": "numpy array",
            "name": "p",
            "description": "A vector that is used to perform rounding."
        }
        ,
        {
            "is_hyperparameter": false,
            "type": "class",
            "name": "g",
            "description": "graph object"
        }
        ,
        {
            "is_hyperparameter": true,
            "type": "float",
            "name": "vol_user",
            "description": "Upper bound on volume for clusters added in variable volume_profile. See documentation for variable volume_profile for details."
        }
    ],
    "algorithm_type": [                                                         
        "Clustering"                                              
    ],
    "output_type": [
        "PREDICTIONS"
    ], 
    "team": "RealML",
    "interface_type" : "supervised_learning",
    "schema_version": 1.0,
    "build": [
        {
            "type": "pip",
            "package": "localgraphclustering"
        }
    ],
    "compute_resources": {
        "num_nodes": [
            1
        ],
        "cores_per_node": [
            1
        ],
        "gpus_per_node": [
            0
        ],
        "mem_per_node": [
            1.0
        ],
        "disk_per_node": [
            1.0
        ],
        "mem_per_gpu": [
            0.0
        ]
    }
}
