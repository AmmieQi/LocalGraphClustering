language: python
python:
  - "3.6"
# command to install dependencies
install:
  - pip install -r requirements.txt
  - bash bin/createGraphLibFile.sh
  # - pip install .
  # - sudo apt-get update
  # # We do this conditionally because it saves us some downloading if the
  # # version is the same.
  # - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
  #     wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
  #   else
  #     wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  #   fi
  # - bash miniconda.sh -b -p $HOME/miniconda
  # - export PATH="$HOME/miniconda/bin:$PATH"
  # - hash -r
  # - conda config --set always_yes yes --set changeps1 no
  # - conda update -q conda
  # # Useful for debugging any issues with conda
  # - conda info -a

  # - conda env create -n test-environment python=$TRAVIS_PYTHON_VERSION -f environment.yml
  # - source activate test-environment

# see for alternatives to travis wait
# https://github.com/travis-ci/travis-ci/issues/4190

# split tests into stages to avoid 50 mins time limit
# https://docs.travis-ci.com/user/build-stages/
jobs:
  include:
    -stage: "setup coverage call"
    -script:
      - cov_call = "coverage run -p --source=localgraphclustering --omit=localgraphclustering/tests/* -m pytest --notebook-tests --test-plots --long-tests"
    -stage: "test loading and algorithms"
    -script:
      # Output something every 10 minutes or Travis kills the job
      - while sleep 540; do echo "=====[ $SECONDS seconds still running ]====="; done &
      - $cov_call localgraphclustering/tests/test_load.py
      - $cov_call localgraphclustering/tests/test_algs.py
      - $cov_call localgraphclustering/tests/test_crd.py
      # Killing background sleep loop
      - kill %1
    -stage: "test ncp and plots"
    -script:
      - while sleep 540; do echo "=====[ $SECONDS seconds still running ]====="; done &
      - $cov_call localgraphclustering/tests/test_ncp.py
      - $cov_call localgraphclustering/tests/test_plots.py
      - kill %1
    -stage: "test notebooks"
    -script:
      - while sleep 540; do echo "=====[ $SECONDS seconds still running ]====="; done &
      - $cov_call localgraphclustering/tests/test_notebook.py
      - kill %1
    -stage: "combine test data"
    -script:
      - coverage combine
after_success:
  coveralls
