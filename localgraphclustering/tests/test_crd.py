from localgraphclustering import *
import time
import numpy as np
import sys

sys.path.append("notebooks/")

from helper import *
import random

def test_crd():
    correct_output = {}
    correct_output["dolphins"] = [(22, 0.0707070707070707),
                                 (40, 0.0707070707070707),
                                 (21, 0.06382978723404255),
                                 (14, 0.125),
                                 (20, 0.06521739130434782),
                                 (9, 0.36585365853658536),
                                 (41, 0.06382978723404255),
                                 (21, 0.06382978723404255),
                                 (20, 0.06521739130434782),
                                 (20, 0.06521739130434782),
                                 (41, 0.06382978723404255),
                                 (22, 0.0784313725490196),
                                 (14, 0.2777777777777778),
                                 (20, 0.06521739130434782),
                                 (18, 0.3157894736842105),
                                 (14, 0.125),
                                 (18, 0.38461538461538464),
                                 (21, 0.3380281690140845),
                                 (41, 0.06382978723404255),
                                 (35, 0.14285714285714285)]
    correct_output["ASTRAL"] = [(297, 0.6552586610151693),
                                 (843, 0.7703208285784449),
                                 (249, 0.7031941406846041),
                                 (607, 0.5431249022312604),
                                 (1028, 0.9735653337794881),
                                 (514, 0.5208152106375047),
                                 (292, 0.6678235306126615),
                                 (364, 0.5279174863972736),
                                 (714, 0.6536140539090787),
                                 (457, 0.47221752844429427),
                                 (410, 0.4568834705920498),
                                 (269, 0.6517458458385184),
                                 (905, 0.834524318491826),
                                 (472, 0.47143248925861597),
                                 (183, 0.8479762587595701),
                                 (379, 0.5358479280488427),
                                 (260, 0.6940196539247729),
                                 (1035, 0.9819978046103184),
                                 (354, 0.4919573876255179),
                                 (422, 0.5808358781336552)]
    correct_output["neuro-fmri-01"] = [(115, 0.2014995313964386),
                                     (45, 0.15610217596972564),
                                     (91, 0.18893466745144202),
                                     (289, 0.15307079231129864),
                                     (138, 0.1591192355629414),
                                     (423, 0.24884762708563266),
                                     (75, 0.23904382470119523),
                                     (300, 0.21632430467187785),
                                     (130, 0.17767722473604827),
                                     (57, 0.3),
                                     (118, 0.16),
                                     (100, 0.2867132867132867),
                                     (86, 0.20980533525594808),
                                     (150, 0.15830985915492957),
                                     (1, 1),
                                     (283, 0.13108108108108107),
                                     (175, 0.22342938119981107),
                                     (1035, 0.06297744053549986),
                                     (95, 0.1795446061963419),
                                     (288, 0.18113585188891668)]
    correct_output["disconnected"] = [(4, 0.0),
                                     (4, 0.0),
                                     (4, 0.0),
                                     (4, 0.0),
                                     (2, 0.5),
                                     (4, 0.0),
                                     (4, 0.0),
                                     (4, 0.0)]
    correct_output["ppi-homo"] = [(2768, 0.19060210672330832),
                                 (1379, 0.3017579543803574),
                                 (8, 0.21739130434782608),
                                 (3786, 0.2335430863030224),
                                 (3, 0.2),
                                 (25, 0.18309859154929578),
                                 (3298, 0.2667533754490276),
                                 (32, 0.24444444444444444),
                                 (10, 0.2413793103448276),
                                 (64, 0.3193717277486911),
                                 (19, 0.22857142857142856),
                                 (1774, 0.28492573834860296),
                                 (12, 0.13043478260869565),
                                 (11, 0.25),
                                 (29, 0.30434782608695654),
                                 (10, 0.22580645161290322),
                                 (9, 0.22448979591836735),
                                 (47, 0.25806451612903225),
                                 (522, 0.3180952380952381),
                                 (13, 0.2413793103448276)]
    nsamples = 20
    for key in correct_output.keys():
        g = lgc_data(key)
        g.discard_weights()
        n = g._num_vertices
        random.seed(0)
        nodes = random.sample(range(n),min(n,nsamples))
        results = []
        for i in nodes:
            R = [i]
            R.extend(g.neighbors(i))
            S = lgc.flow_clustering(g,R,method="crd", U = 3,h = 10, w = 2)
            results.append((len(S[0]),g.set_scores(S[0])['cond']))
        print(results)
        correct_result = correct_output[key]
        for i in range(len(nodes)):
            assert(results[i][0] == correct_result[i][0])
            assert(abs(results[i][1] - correct_result[i][1]) < 0.0001)